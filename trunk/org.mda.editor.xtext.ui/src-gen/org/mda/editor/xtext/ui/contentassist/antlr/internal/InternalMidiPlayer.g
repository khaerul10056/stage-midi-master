/*
* generated by Xtext
*/
grammar InternalMidiPlayer;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.mda.editor.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mda.editor.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.mda.editor.xtext.services.MidiPlayerGrammarAccess;

}

@parser::members {
 
 	private MidiPlayerGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MidiPlayerGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMidiFile
entryRuleMidiFile 
:
{ before(grammarAccess.getMidiFileRule()); }
	 ruleMidiFile
{ after(grammarAccess.getMidiFileRule()); } 
	 EOF 
;

// Rule MidiFile
ruleMidiFile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMidiFileAccess().getGroup()); }
(rule__MidiFile__Group__0)
{ after(grammarAccess.getMidiFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMidiFilePart
entryRuleMidiFilePart 
:
{ before(grammarAccess.getMidiFilePartRule()); }
	 ruleMidiFilePart
{ after(grammarAccess.getMidiFilePartRule()); } 
	 EOF 
;

// Rule MidiFilePart
ruleMidiFilePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMidiFilePartAccess().getGroup()); }
(rule__MidiFilePart__Group__0)
{ after(grammarAccess.getMidiFilePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMidiFileTextLine
entryRuleMidiFileTextLine 
:
{ before(grammarAccess.getMidiFileTextLineRule()); }
	 ruleMidiFileTextLine
{ after(grammarAccess.getMidiFileTextLineRule()); } 
	 EOF 
;

// Rule MidiFileTextLine
ruleMidiFileTextLine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getGroup()); }
(rule__MidiFileTextLine__Group__0)
{ after(grammarAccess.getMidiFileTextLineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMidiFileChordPart
entryRuleMidiFileChordPart 
:
{ before(grammarAccess.getMidiFileChordPartRule()); }
	 ruleMidiFileChordPart
{ after(grammarAccess.getMidiFileChordPartRule()); } 
	 EOF 
;

// Rule MidiFileChordPart
ruleMidiFileChordPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getGroup()); }
(rule__MidiFileChordPart__Group__0)
{ after(grammarAccess.getMidiFileChordPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MidiFilePartType
ruleMidiFilePartType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartTypeAccess().getAlternatives()); }
(rule__MidiFilePartType__Alternatives)
{ after(grammarAccess.getMidiFilePartTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePartType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartTypeAccess().getREFRAINEnumLiteralDeclaration_0()); }
(	'REFRAIN' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getREFRAINEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMidiFilePartTypeAccess().getBRIDGEEnumLiteralDeclaration_1()); }
(	'BRIDGE' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getBRIDGEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMidiFilePartTypeAccess().getVERSEnumLiteralDeclaration_2()); }
(	'VERS' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getVERSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getMidiFilePartTypeAccess().getSOLOEnumLiteralDeclaration_3()); }
(	'SOLO' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getSOLOEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getMidiFilePartTypeAccess().getZWISCHENSPIELEnumLiteralDeclaration_4()); }
(	'ZWISCHENSPIEL' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getZWISCHENSPIELEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getMidiFilePartTypeAccess().getINTROEnumLiteralDeclaration_5()); }
(	'INTRO' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getINTROEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getMidiFilePartTypeAccess().getEXTROEnumLiteralDeclaration_6()); }
(	'EXTRO' 
)
{ after(grammarAccess.getMidiFilePartTypeAccess().getEXTROEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MidiFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__0__Impl
	rule__MidiFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getMidiFileAction_0()); }
(

)
{ after(grammarAccess.getMidiFileAccess().getMidiFileAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__1__Impl
	rule__MidiFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getGroup_1()); }
(rule__MidiFile__Group_1__0)
{ after(grammarAccess.getMidiFileAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__2__Impl
	rule__MidiFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getGroup_2()); }
(rule__MidiFile__Group_2__0)?
{ after(grammarAccess.getMidiFileAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__3__Impl
	rule__MidiFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getGroup_3()); }
(rule__MidiFile__Group_3__0)?
{ after(grammarAccess.getMidiFileAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__4__Impl
	rule__MidiFile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getGroup_4()); }
(rule__MidiFile__Group_4__0)?
{ after(grammarAccess.getMidiFileAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__5__Impl
	rule__MidiFile__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getGroup_5()); }
(rule__MidiFile__Group_5__0)?
{ after(grammarAccess.getMidiFileAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getGroup_6()); }
(rule__MidiFile__Group_6__0)?
{ after(grammarAccess.getMidiFileAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MidiFile__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_1__0__Impl
	rule__MidiFile__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getNameKeyword_1_0()); }

	'name' 

{ after(grammarAccess.getMidiFileAccess().getNameKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getNameAssignment_1_1()); }
(rule__MidiFile__NameAssignment_1_1)
{ after(grammarAccess.getMidiFileAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFile__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_2__0__Impl
	rule__MidiFile__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPathKeyword_2_0()); }

	'path' 

{ after(grammarAccess.getMidiFileAccess().getPathKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPathAssignment_2_1()); }
(rule__MidiFile__PathAssignment_2_1)
{ after(grammarAccess.getMidiFileAccess().getPathAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFile__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_3__0__Impl
	rule__MidiFile__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getFontsizeKeyword_3_0()); }

	'fontsize' 

{ after(grammarAccess.getMidiFileAccess().getFontsizeKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getFontsizeAssignment_3_1()); }
(rule__MidiFile__FontsizeAssignment_3_1)
{ after(grammarAccess.getMidiFileAccess().getFontsizeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFile__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_4__0__Impl
	rule__MidiFile__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPicKeyword_4_0()); }

	'pic' 

{ after(grammarAccess.getMidiFileAccess().getPicKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPicAssignment_4_1()); }
(rule__MidiFile__PicAssignment_4_1)
{ after(grammarAccess.getMidiFileAccess().getPicAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFile__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_5__0__Impl
	rule__MidiFile__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getKeyKeyword_5_0()); }

	'key' 

{ after(grammarAccess.getMidiFileAccess().getKeyKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getKeyAssignment_5_1()); }
(rule__MidiFile__KeyAssignment_5_1)
{ after(grammarAccess.getMidiFileAccess().getKeyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFile__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_6__0__Impl
	rule__MidiFile__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getLeftCurlyBracketKeyword_6_0()); }

	'{' 

{ after(grammarAccess.getMidiFileAccess().getLeftCurlyBracketKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_6__1__Impl
	rule__MidiFile__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPartsAssignment_6_1()); }
(rule__MidiFile__PartsAssignment_6_1)*
{ after(grammarAccess.getMidiFileAccess().getPartsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFile__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFile__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getRightCurlyBracketKeyword_6_2()); }

	'}' 

{ after(grammarAccess.getMidiFileAccess().getRightCurlyBracketKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MidiFilePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group__0__Impl
	rule__MidiFilePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getMidiFilePartAction_0()); }
(

)
{ after(grammarAccess.getMidiFilePartAccess().getMidiFilePartAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group__1__Impl
	rule__MidiFilePart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getParttypeAssignment_1()); }
(rule__MidiFilePart__ParttypeAssignment_1)
{ after(grammarAccess.getMidiFilePartAccess().getParttypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group__2__Impl
	rule__MidiFilePart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getGroup_2()); }
(rule__MidiFilePart__Group_2__0)?
{ after(grammarAccess.getMidiFilePartAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group__3__Impl
	rule__MidiFilePart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getGroup_3()); }
(rule__MidiFilePart__Group_3__0)?
{ after(grammarAccess.getMidiFilePartAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getGroup_4()); }
(rule__MidiFilePart__Group_4__0)?
{ after(grammarAccess.getMidiFilePartAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MidiFilePart__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_2__0__Impl
	rule__MidiFilePart__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getBarKeyword_2_0()); }

	'bar' 

{ after(grammarAccess.getMidiFilePartAccess().getBarKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getBarAssignment_2_1()); }
(rule__MidiFilePart__BarAssignment_2_1)
{ after(grammarAccess.getMidiFilePartAccess().getBarAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFilePart__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_3__0__Impl
	rule__MidiFilePart__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getRefPartKeyword_3_0()); }

	'refPart' 

{ after(grammarAccess.getMidiFilePartAccess().getRefPartKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getRefPartAssignment_3_1()); }
(rule__MidiFilePart__RefPartAssignment_3_1)
{ after(grammarAccess.getMidiFilePartAccess().getRefPartAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFilePart__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_4__0__Impl
	rule__MidiFilePart__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getMidiFilePartAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_4__1__Impl
	rule__MidiFilePart__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getTextlinesAssignment_4_1()); }
(rule__MidiFilePart__TextlinesAssignment_4_1)
{ after(grammarAccess.getMidiFilePartAccess().getTextlinesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_4__2__Impl
	rule__MidiFilePart__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getGroup_4_2()); }
(rule__MidiFilePart__Group_4_2__0)*
{ after(grammarAccess.getMidiFilePartAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getRightCurlyBracketKeyword_4_3()); }

	'}' 

{ after(grammarAccess.getMidiFilePartAccess().getRightCurlyBracketKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MidiFilePart__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_4_2__0__Impl
	rule__MidiFilePart__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getMidiFilePartAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFilePart__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFilePart__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getTextlinesAssignment_4_2_1()); }
(rule__MidiFilePart__TextlinesAssignment_4_2_1)
{ after(grammarAccess.getMidiFilePartAccess().getTextlinesAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFileTextLine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileTextLine__Group__0__Impl
	rule__MidiFileTextLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileTextLine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getMidiFileTextLineAction_0()); }
(

)
{ after(grammarAccess.getMidiFileTextLineAccess().getMidiFileTextLineAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileTextLine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileTextLine__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileTextLine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getGroup_1()); }
(rule__MidiFileTextLine__Group_1__0)?
{ after(grammarAccess.getMidiFileTextLineAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFileTextLine__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileTextLine__Group_1__0__Impl
	rule__MidiFileTextLine__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileTextLine__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getMidiFileTextLineAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileTextLine__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileTextLine__Group_1__1__Impl
	rule__MidiFileTextLine__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileTextLine__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getChordPartsAssignment_1_1()); }
(rule__MidiFileTextLine__ChordPartsAssignment_1_1)*
{ after(grammarAccess.getMidiFileTextLineAccess().getChordPartsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileTextLine__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileTextLine__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileTextLine__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getMidiFileTextLineAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MidiFileChordPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileChordPart__Group__0__Impl
	rule__MidiFileChordPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getMidiFileChordPartAction_0()); }
(

)
{ after(grammarAccess.getMidiFileChordPartAccess().getMidiFileChordPartAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileChordPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileChordPart__Group__1__Impl
	rule__MidiFileChordPart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getGroup_1()); }
(rule__MidiFileChordPart__Group_1__0)?
{ after(grammarAccess.getMidiFileChordPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileChordPart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileChordPart__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getTextAssignment_2()); }
(rule__MidiFileChordPart__TextAssignment_2)
{ after(grammarAccess.getMidiFileChordPartAccess().getTextAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MidiFileChordPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileChordPart__Group_1__0__Impl
	rule__MidiFileChordPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getMidiFileChordPartAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileChordPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileChordPart__Group_1__1__Impl
	rule__MidiFileChordPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getChordAssignment_1_1()); }
(rule__MidiFileChordPart__ChordAssignment_1_1)
{ after(grammarAccess.getMidiFileChordPartAccess().getChordAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MidiFileChordPart__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MidiFileChordPart__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getMidiFileChordPartAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__MidiFile__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getNameEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getMidiFileAccess().getNameEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__PathAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPathEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getMidiFileAccess().getPathEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__FontsizeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getFontsizeEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getMidiFileAccess().getFontsizeEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__PicAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPicEStringParserRuleCall_4_1_0()); }
	ruleEString{ after(grammarAccess.getMidiFileAccess().getPicEStringParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__KeyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getKeyEStringParserRuleCall_5_1_0()); }
	ruleEString{ after(grammarAccess.getMidiFileAccess().getKeyEStringParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFile__PartsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileAccess().getPartsMidiFilePartParserRuleCall_6_1_0()); }
	ruleMidiFilePart{ after(grammarAccess.getMidiFileAccess().getPartsMidiFilePartParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__ParttypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getParttypeMidiFilePartTypeEnumRuleCall_1_0()); }
	ruleMidiFilePartType{ after(grammarAccess.getMidiFilePartAccess().getParttypeMidiFilePartTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__BarAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getBarEIntParserRuleCall_2_1_0()); }
	ruleEInt{ after(grammarAccess.getMidiFilePartAccess().getBarEIntParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__RefPartAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getRefPartMidiFilePartCrossReference_3_1_0()); }
(
{ before(grammarAccess.getMidiFilePartAccess().getRefPartMidiFilePartEStringParserRuleCall_3_1_0_1()); }
	ruleEString{ after(grammarAccess.getMidiFilePartAccess().getRefPartMidiFilePartEStringParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getMidiFilePartAccess().getRefPartMidiFilePartCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__TextlinesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getTextlinesMidiFileTextLineParserRuleCall_4_1_0()); }
	ruleMidiFileTextLine{ after(grammarAccess.getMidiFilePartAccess().getTextlinesMidiFileTextLineParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFilePart__TextlinesAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFilePartAccess().getTextlinesMidiFileTextLineParserRuleCall_4_2_1_0()); }
	ruleMidiFileTextLine{ after(grammarAccess.getMidiFilePartAccess().getTextlinesMidiFileTextLineParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileTextLine__ChordPartsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileTextLineAccess().getChordPartsMidiFileChordPartParserRuleCall_1_1_0()); }
	ruleMidiFileChordPart{ after(grammarAccess.getMidiFileTextLineAccess().getChordPartsMidiFileChordPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__ChordAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getChordEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getMidiFileChordPartAccess().getChordEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MidiFileChordPart__TextAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMidiFileChordPartAccess().getTextEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getMidiFileChordPartAccess().getTextEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


