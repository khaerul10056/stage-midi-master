/*
* generated by Xtext
*/
package org.mda.editor.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.mda.editor.xtext.services.MidiPlayerGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class MidiPlayerParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private MidiPlayerGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group(this, this, 0, inst);
			case 1: return new MidiFilePart_Group(this, this, 1, inst);
			case 2: return new MidiFileTextLine_Group(this, this, 2, inst);
			case 3: return new MidiFileChordPart_Group(this, this, 3, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule MidiFile ****************
 *
 * MidiFile:
 * 	{MidiFile} ("name" name=EString) ("path" path=EString)? ("fontsize" fontsize=EString)? ("pic" pic=EString)? ("key"
 * 	key=EString)? ("{" parts+=MidiFilePart* "}")?;
 *
 **/

// {MidiFile} ("name" name=EString) ("path" path=EString)? ("fontsize" fontsize=EString)? ("pic" pic=EString)? ("key"
// key=EString)? ("{" parts+=MidiFilePart* "}")?
protected class MidiFile_Group extends GroupToken {
	
	public MidiFile_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFile_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MidiFile_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MidiFile_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MidiFile_Group_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MidiFile_Group_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMidiFileAccess().getMidiFileAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MidiFile}
protected class MidiFile_MidiFileAction_0 extends ActionToken  {

	public MidiFile_MidiFileAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getMidiFileAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "name" name=EString
protected class MidiFile_Group_1 extends GroupToken {
	
	public MidiFile_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_NameAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "name"
protected class MidiFile_NameKeyword_1_0 extends KeywordToken  {
	
	public MidiFile_NameKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getNameKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_MidiFileAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class MidiFile_NameAssignment_1_1 extends AssignmentToken  {
	
	public MidiFile_NameAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getNameAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_NameKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileAccess().getNameEStringParserRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileAccess().getNameEStringParserRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}


// ("path" path=EString)?
protected class MidiFile_Group_2 extends GroupToken {
	
	public MidiFile_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_PathAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "path"
protected class MidiFile_PathKeyword_2_0 extends KeywordToken  {
	
	public MidiFile_PathKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getPathKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// path=EString
protected class MidiFile_PathAssignment_2_1 extends AssignmentToken  {
	
	public MidiFile_PathAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getPathAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_PathKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("path",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("path");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileAccess().getPathEStringParserRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileAccess().getPathEStringParserRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("fontsize" fontsize=EString)?
protected class MidiFile_Group_3 extends GroupToken {
	
	public MidiFile_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_FontsizeAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "fontsize"
protected class MidiFile_FontsizeKeyword_3_0 extends KeywordToken  {
	
	public MidiFile_FontsizeKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getFontsizeKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFile_Group_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// fontsize=EString
protected class MidiFile_FontsizeAssignment_3_1 extends AssignmentToken  {
	
	public MidiFile_FontsizeAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getFontsizeAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_FontsizeKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("fontsize",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("fontsize");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileAccess().getFontsizeEStringParserRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileAccess().getFontsizeEStringParserRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("pic" pic=EString)?
protected class MidiFile_Group_4 extends GroupToken {
	
	public MidiFile_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_PicAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "pic"
protected class MidiFile_PicKeyword_4_0 extends KeywordToken  {
	
	public MidiFile_PicKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getPicKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFile_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MidiFile_Group_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// pic=EString
protected class MidiFile_PicAssignment_4_1 extends AssignmentToken  {
	
	public MidiFile_PicAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getPicAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_PicKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("pic",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("pic");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileAccess().getPicEStringParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileAccess().getPicEStringParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("key" key=EString)?
protected class MidiFile_Group_5 extends GroupToken {
	
	public MidiFile_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_KeyAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "key"
protected class MidiFile_KeyKeyword_5_0 extends KeywordToken  {
	
	public MidiFile_KeyKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getKeyKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFile_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MidiFile_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MidiFile_Group_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// key=EString
protected class MidiFile_KeyAssignment_5_1 extends AssignmentToken  {
	
	public MidiFile_KeyAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getKeyAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_KeyKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("key",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("key");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileAccess().getKeyEStringParserRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileAccess().getKeyEStringParserRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("{" parts+=MidiFilePart* "}")?
protected class MidiFile_Group_6 extends GroupToken {
	
	public MidiFile_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_RightCurlyBracketKeyword_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class MidiFile_LeftCurlyBracketKeyword_6_0 extends KeywordToken  {
	
	public MidiFile_LeftCurlyBracketKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getLeftCurlyBracketKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFile_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MidiFile_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MidiFile_Group_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MidiFile_Group_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// parts+=MidiFilePart*
protected class MidiFile_PartsAssignment_6_1 extends AssignmentToken  {
	
	public MidiFile_PartsAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getPartsAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMidiFilePartRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMidiFileAccess().getPartsMidiFilePartParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MidiFile_PartsAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MidiFile_LeftCurlyBracketKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MidiFile_RightCurlyBracketKeyword_6_2 extends KeywordToken  {
	
	public MidiFile_RightCurlyBracketKeyword_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileAccess().getRightCurlyBracketKeyword_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFile_PartsAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule MidiFile ****************/



/************ begin Rule MidiFilePart ****************
 *
 * MidiFilePart:
 * 	{MidiFilePart} parttype=MidiFilePartType ("bar" bar=EInt)? ("refPart" refPart=[MidiFilePart|EString])? ("{"
 * 	textlines+=MidiFileTextLine ("," textlines+=MidiFileTextLine)* "}")?;
 *
 **/

// {MidiFilePart} parttype=MidiFilePartType ("bar" bar=EInt)? ("refPart" refPart=[MidiFilePart|EString])? ("{"
// textlines+=MidiFileTextLine ("," textlines+=MidiFileTextLine)* "}")?
protected class MidiFilePart_Group extends GroupToken {
	
	public MidiFilePart_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFilePart_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MidiFilePart_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MidiFilePart_ParttypeAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMidiFilePartAccess().getMidiFilePartAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MidiFilePart}
protected class MidiFilePart_MidiFilePartAction_0 extends ActionToken  {

	public MidiFilePart_MidiFilePartAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getMidiFilePartAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// parttype=MidiFilePartType
protected class MidiFilePart_ParttypeAssignment_1 extends AssignmentToken  {
	
	public MidiFilePart_ParttypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getParttypeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_MidiFilePartAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parttype",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parttype");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFilePartAccess().getParttypeMidiFilePartTypeEnumRuleCall_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getMidiFilePartAccess().getParttypeMidiFilePartTypeEnumRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("bar" bar=EInt)?
protected class MidiFilePart_Group_2 extends GroupToken {
	
	public MidiFilePart_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_BarAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "bar"
protected class MidiFilePart_BarKeyword_2_0 extends KeywordToken  {
	
	public MidiFilePart_BarKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getBarKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_ParttypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// bar=EInt
protected class MidiFilePart_BarAssignment_2_1 extends AssignmentToken  {
	
	public MidiFilePart_BarAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getBarAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_BarKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("bar",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("bar");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFilePartAccess().getBarEIntParserRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFilePartAccess().getBarEIntParserRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("refPart" refPart=[MidiFilePart|EString])?
protected class MidiFilePart_Group_3 extends GroupToken {
	
	public MidiFilePart_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_RefPartAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refPart"
protected class MidiFilePart_RefPartKeyword_3_0 extends KeywordToken  {
	
	public MidiFilePart_RefPartKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getRefPartKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFilePart_ParttypeAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// refPart=[MidiFilePart|EString]
protected class MidiFilePart_RefPartAssignment_3_1 extends AssignmentToken  {
	
	public MidiFilePart_RefPartAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getRefPartAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_RefPartKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refPart",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refPart");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMidiFilePartAccess().getRefPartMidiFilePartCrossReference_3_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMidiFilePartAccess().getRefPartMidiFilePartCrossReference_3_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("{" textlines+=MidiFileTextLine ("," textlines+=MidiFileTextLine)* "}")?
protected class MidiFilePart_Group_4 extends GroupToken {
	
	public MidiFilePart_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_RightCurlyBracketKeyword_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class MidiFilePart_LeftCurlyBracketKeyword_4_0 extends KeywordToken  {
	
	public MidiFilePart_LeftCurlyBracketKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getLeftCurlyBracketKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFilePart_Group_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MidiFilePart_ParttypeAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// textlines+=MidiFileTextLine
protected class MidiFilePart_TextlinesAssignment_4_1 extends AssignmentToken  {
	
	public MidiFilePart_TextlinesAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getTextlinesAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileTextLine_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textlines",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textlines");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMidiFileTextLineRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMidiFilePartAccess().getTextlinesMidiFileTextLineParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MidiFilePart_LeftCurlyBracketKeyword_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," textlines+=MidiFileTextLine)*
protected class MidiFilePart_Group_4_2 extends GroupToken {
	
	public MidiFilePart_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_TextlinesAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class MidiFilePart_CommaKeyword_4_2_0 extends KeywordToken  {
	
	public MidiFilePart_CommaKeyword_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getCommaKeyword_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFilePart_TextlinesAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// textlines+=MidiFileTextLine
protected class MidiFilePart_TextlinesAssignment_4_2_1 extends AssignmentToken  {
	
	public MidiFilePart_TextlinesAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getTextlinesAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileTextLine_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textlines",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textlines");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMidiFileTextLineRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMidiFilePartAccess().getTextlinesMidiFileTextLineParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MidiFilePart_CommaKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class MidiFilePart_RightCurlyBracketKeyword_4_3 extends KeywordToken  {
	
	public MidiFilePart_RightCurlyBracketKeyword_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFilePartAccess().getRightCurlyBracketKeyword_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFilePart_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFilePart_TextlinesAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule MidiFilePart ****************/


/************ begin Rule MidiFileTextLine ****************
 *
 * MidiFileTextLine:
 * 	{MidiFileTextLine} ("{" chordParts+=MidiFileChordPart* "}")?;
 *
 **/

// {MidiFileTextLine} ("{" chordParts+=MidiFileChordPart* "}")?
protected class MidiFileTextLine_Group extends GroupToken {
	
	public MidiFileTextLine_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileTextLineAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileTextLine_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFileTextLine_MidiFileTextLineAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMidiFileTextLineAccess().getMidiFileTextLineAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MidiFileTextLine}
protected class MidiFileTextLine_MidiFileTextLineAction_0 extends ActionToken  {

	public MidiFileTextLine_MidiFileTextLineAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMidiFileTextLineAccess().getMidiFileTextLineAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("{" chordParts+=MidiFileChordPart* "}")?
protected class MidiFileTextLine_Group_1 extends GroupToken {
	
	public MidiFileTextLine_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileTextLineAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileTextLine_RightCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class MidiFileTextLine_LeftCurlyBracketKeyword_1_0 extends KeywordToken  {
	
	public MidiFileTextLine_LeftCurlyBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileTextLineAccess().getLeftCurlyBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileTextLine_MidiFileTextLineAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// chordParts+=MidiFileChordPart*
protected class MidiFileTextLine_ChordPartsAssignment_1_1 extends AssignmentToken  {
	
	public MidiFileTextLine_ChordPartsAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileTextLineAccess().getChordPartsAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("chordParts",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("chordParts");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMidiFileChordPartRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMidiFileTextLineAccess().getChordPartsMidiFileChordPartParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MidiFileTextLine_ChordPartsAssignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MidiFileTextLine_LeftCurlyBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MidiFileTextLine_RightCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public MidiFileTextLine_RightCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileTextLineAccess().getRightCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileTextLine_ChordPartsAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule MidiFileTextLine ****************/



/************ begin Rule MidiFileChordPart ****************
 *
 * MidiFileChordPart:
 * 	{MidiFileChordPart} ("(" chord=EString ")")? text=EString;
 *
 **/

// {MidiFileChordPart} ("(" chord=EString ")")? text=EString
protected class MidiFileChordPart_Group extends GroupToken {
	
	public MidiFileChordPart_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_TextAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMidiFileChordPartAccess().getMidiFileChordPartAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MidiFileChordPart}
protected class MidiFileChordPart_MidiFileChordPartAction_0 extends ActionToken  {

	public MidiFileChordPart_MidiFileChordPartAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getMidiFileChordPartAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// ("(" chord=EString ")")?
protected class MidiFileChordPart_Group_1 extends GroupToken {
	
	public MidiFileChordPart_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_RightParenthesisKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "("
protected class MidiFileChordPart_LeftParenthesisKeyword_1_0 extends KeywordToken  {
	
	public MidiFileChordPart_LeftParenthesisKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getLeftParenthesisKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_MidiFileChordPartAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// chord=EString
protected class MidiFileChordPart_ChordAssignment_1_1 extends AssignmentToken  {
	
	public MidiFileChordPart_ChordAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getChordAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_LeftParenthesisKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("chord",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("chord");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileChordPartAccess().getChordEStringParserRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileChordPartAccess().getChordEStringParserRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}

// ")"
protected class MidiFileChordPart_RightParenthesisKeyword_1_2 extends KeywordToken  {
	
	public MidiFileChordPart_RightParenthesisKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getRightParenthesisKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_ChordAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// text=EString
protected class MidiFileChordPart_TextAssignment_2 extends AssignmentToken  {
	
	public MidiFileChordPart_TextAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMidiFileChordPartAccess().getTextAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MidiFileChordPart_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MidiFileChordPart_MidiFileChordPartAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("text",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("text");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMidiFileChordPartAccess().getTextEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMidiFileChordPartAccess().getTextEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule MidiFileChordPart ****************/

}
